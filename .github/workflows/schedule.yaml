name: Weekly GW Pipeline

on:
  schedule:
    - cron: "0 3 * * 4"  # Thu 11:00 (UTC+8 -> 11:00)
    - cron: "0 3 * * 5"  # Fri 11:00 (UTC+8 -> 11:00)
  workflow_dispatch: {}

jobs:
  weekly:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install uv
        run: pip install -U uv
      - name: Install deps (with mirror)
        run: uv pip install --system -e ".[dev]" -i https://pypi.tuna.tsinghua.edu.cn/simple --extra-index-url https://pypi.org/simple

      - name: Detect current GW from bootstrap-static
        id: gw
        shell: bash
        run: |
          GW=$(uv run python scripts/detect_gw.py --mode next | cat)
          echo "gw=$GW" >> "$GITHUB_OUTPUT"

      - name: Fetch FPL raw (bootstrap-static, fixtures)
        run: |
          uv run python scripts/fetch_fpl.py --out-dir data/raw/fpl --force-refresh

      - name: Build features & predictions
        run: |
          GW=${{ steps.gw.outputs.gw }}
          uv run python scripts/build_features.py --gw "$GW" --k 3
          uv run python scripts/predict_points.py --gw "$GW"

      - name: Optimize
        run: |
          GW=${{ steps.gw.outputs.gw }}
          uv run python scripts/optimize_squad.py --gw "$GW" --respect-blacklist --use-dgw-adjust

      - name: Fetch actuals (may be unavailable)
        continue-on-error: true
        run: |
          GW=${{ steps.gw.outputs.gw }}
          uv run python scripts/fetch_actuals.py --gw "$GW"

      - name: Evaluate (if actuals exists)
        shell: bash
        run: |
          GW=${{ steps.gw.outputs.gw }}
          FILE="data/processed/actuals_gw$(printf '%02d' "$GW").parquet"
          if [ -f "$FILE" ]; then
            uv run python scripts/evaluate_gw.py --gw "$GW"
          else
            echo "actuals not ready; skip evaluate"
          fi

      - name: Generate report
        run: |
          GW=${{ steps.gw.outputs.gw }}
          uv run python scripts/generate_report.py --gw "$GW"

      - name: Quality gates (non-blocking)
        continue-on-error: true
        run: |
          ruff check . || true
          mypy src || true
          pytest -q || true

      - name: Create PR
        uses: peter-evans/create-pull-request@v6
        with:
          branch: auto/gw${{ steps.gw.outputs.gw }}-report
          title: "Weekly GW ${{ steps.gw.outputs.gw }} Report"
          commit-message: "chore(reports): weekly GW ${{ steps.gw.outputs.gw }} artifacts"
          body: |
            - Generated report.md and summary.json (and metrics.json if available)
            - GW: ${{ steps.gw.outputs.gw }}
          labels: automated, report
