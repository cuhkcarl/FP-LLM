name: Weekly GW Pipeline

on:
  schedule:
    - cron: '0 3 * * 4,5'  # Thu/Fri 11:00 (UTC+8)
  workflow_dispatch: {}

jobs:
  weekly:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install -U pip
          python -m pip install -e ".[dev]"

      - name: Read current GW
        id: gw
        shell: bash
        run: |
          GW=$(python - <<'PY'
          import yaml
          from pathlib import Path
          cfg = yaml.safe_load(Path('configs/base.yaml').read_text(encoding='utf-8')) or {}
          print(int(cfg.get('current_gw', 1)))
          PY
          )
          echo "gw=$GW" >> "$GITHUB_OUTPUT"

      - name: Build features & predictions
        run: |
          GW=${{ steps.gw.outputs.gw }}
          python scripts/build_features.py --gw $GW --k 3 || exit 1
          python scripts/predict_points.py --gw $GW || exit 1

      - name: Optimize & report (without actuals)
        run: |
          GW=${{ steps.gw.outputs.gw }}
          python scripts/optimize_squad.py --gw $GW --respect-blacklist --use-dgw-adjust || exit 1

      - name: Fetch actuals (may fail if GW not completed)
        continue-on-error: true
        run: |
          GW=${{ steps.gw.outputs.gw }}
          python scripts/fetch_actuals.py --gw $GW || exit 0

      - name: Evaluate (if actuals exists)
        shell: bash
        run: |
          GW=${{ steps.gw.outputs.gw }}
          FILE="data/processed/actuals_gw$(printf '%02d' "$GW").parquet"
          if [ -f "$FILE" ]; then
            python scripts/evaluate_gw.py --gw "$GW"
          else
            echo "actuals not ready; skip evaluate"
          fi

      - name: Generate report
        run: |
          GW=${{ steps.gw.outputs.gw }}
          python scripts/generate_report.py --gw $GW

      - name: Run quality gates
        run: |
          ruff check .
          mypy src
          pytest -q

      - name: Create PR
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: |
            chore(reports): weekly GW ${{ steps.gw.outputs.gw }} report artifacts
          branch: auto/gw${{ steps.gw.outputs.gw }}-report
          title: Weekly GW ${{ steps.gw.outputs.gw }} Report
          body: |
            - Generated report.md and summary.json (and metrics.json if available)
            - GW: ${{ steps.gw.outputs.gw }}
          labels: automated, report
